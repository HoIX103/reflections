What happens when you initialize a repository? Why do you need to do it?

    It will create a repository with no commit. It need to be done because
    we can't commit without creating a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The working directory reflect all the files in specific directory, and the 
    repository contain the committed files only. The staging area is just like 
    the "transferring area", we can organise the files to be committed in the 
    staging area before we add them to the repository.
    The staging area make us easier either to organise the files to be committed and
    to commit depends on logical changes.

How can you use the staging area to make sure you have one commit per logical
change?

    After we did the changes in different files for a single logical modification
    , we put those files in the staging area, and double check it for changes made
    by command "git diff" and "git diff before committing.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
